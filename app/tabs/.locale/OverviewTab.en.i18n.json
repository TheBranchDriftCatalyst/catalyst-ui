{
  "welcome_to_catalyst_ui": "Welcome to Catalyst UI üëã",
  "hey_there_i_m_building_a_component_library_that_br": "Hey there! I'm building a component library that brings together modern React patterns\n              with a cybersynthpunk aesthetic. This is my playground for experimenting with UI\n              primitives, data visualization, and developer experience.",
  "what_you_ll_find_here": "What you'll find here:",
  "accessible_components_built_on_radix_ui_styled_wit": "Accessible components built on Radix UI,\n              styled with Tailwind v4, complete with interactive D3.js visualizations, multiple\n              theme variants (from synthwave to nature-inspired palettes), and a robust development\n              workflow powered by Storybook and Vite. Everything is TypeScript-first with form\n              validation via React Hook Form + Zod.",
  "why_i_built_this": "Why I built this:",
  "i_wanted_a_reusable_component_system_that_doesn_t_": "I wanted a reusable component system that doesn't\n              compromise on accessibility, performance, or aesthetics. This library is part of my\n              larger catalyst-devspace monorepo where I explore infrastructure automation, Python\n              utilities, and full-stack development patterns. It's open-source, constantly evolving,\n              and built with real-world use cases in mind.",
  "feel_free_to_explore_the_tabs_above_to_see_design_": "Feel free to explore the tabs above to see design tokens, interactive cards, force\n              graph visualizations, and more. The source code is available on GitHub if you want to\n              dive deeper or contribute!",
  "key_features": "üöÄ Key Features",
  "what_makes_catalyst_ui_special": "What makes Catalyst UI special",
  "build_performance": "Build & Performance",
  "tree_shaking": "Tree Shaking:",
  "granular_es_module_exports_with_per_file_entry_poi": "Granular ES module exports with per-file entry\n                      points for minimal bundle sizes",
  "css_code_splitting": "CSS Code Splitting:",
  "per_component_css_files_loaded_only_when_needed": "Per-component CSS files loaded only when\n                      needed",
  "source_maps": "Source Maps:",
  "debug_original_typescript_source_in_production_bui": "Debug original TypeScript source in production\n                      builds",
  "next_js_ready": "Next.js Ready:",
  "automatic_use_client_directive_preservation_for_ap": "Automatic \"use client\" directive preservation\n                      for App Router",
  "animation_system": "Animation System",
  "animation_hocs": "Animation HOCs:",
  "reusable_components_animatedflip_animatedfade_anim": "Reusable components (AnimatedFlip,\n                      AnimatedFade, AnimatedSlide, AnimatedBounce)",
  "controlled_uncontrolled": "Controlled/Uncontrolled:",
  "both_modes_supported_with_onflipchange_callbacks": "Both modes supported with\n                      onFlipChange callbacks",
  "hardware_accelerated": "Hardware Accelerated:",
  "css_transforms_with_gpu_acceleration": "CSS transforms with GPU acceleration",
  "theme_animations": "Theme Animations:",
  "subtle_css_keyframes_glow_pulse_border_shimmer_for": "Subtle CSS keyframes (glow-pulse,\n                      border-shimmer) for cyberpunk aesthetic",
  "": "üõ†Ô∏è",
  "developer_experience": "Developer Experience",
  "codeflipcard": "CodeFlipCard:",
  "interactive_cards_that_flip_to_show_source_code_wi": "Interactive cards that flip to show source code\n                      with auto-import extraction",
  "import_footers": "Import Footers:",
  "auto_parsed_import_statements_from_source_code_no_": "Auto-parsed import statements from source\n                      code (no manual strings!)",
  "hot_module_replacement": "Hot Module Replacement:",
  "lightning_fast_dev_with_vite_hmr": "Lightning-fast dev with Vite HMR",
  "yarn_link_support": "Yarn Link Support:",
  "real_time_concurrent_development_with_auto_rebuild": "Real-time concurrent development with\n                      auto-rebuild",
  "theme_system": "Theme System",
  "7_themes": "7 Themes:",
  "catalyst_dracula_gold_laracon_nature_netflix_nord": "Catalyst, Dracula, Gold, Laracon, Nature, Netflix,\n                      Nord",
  "dark_light_variants": "Dark/Light Variants:",
  "each_theme_supports_both_modes": "Each theme supports both modes",
  "css_variables": "CSS Variables:",
  "full_customization_via_design_tokens": "Full customization via design tokens",
  "localstorage_persistence": "LocalStorage Persistence:",
  "theme_preferences_automatically_saved": "Theme preferences automatically\n                      saved",
  "data_visualization": "Data Visualization",
  "forcegraph": "ForceGraph:",
  "enterprise_d3_js_wrapper_with_force_directed_dagre": "Enterprise D3.js wrapper with force-directed,\n                      Dagre, ELK layouts",
  "smart_edge_routing": "Smart Edge Routing:",
  "orthogonal_paths_with_collision_detection": "Orthogonal paths with collision detection",
  "position_persistence": "Position Persistence:",
  "remember_node_layouts_per_algorithm_type": "Remember node layouts per algorithm\n                      type",
  "performance": "Performance:",
  "memoized_enrichment_o_1_filters_for_100_node_graph": "Memoized enrichment, O(1) filters for 100+ node\n                      graphs",
  "advanced_components": "Advanced Components",
  "codeblock": "CodeBlock:",
  "shiki_powered_syntax_highlighting_with_editable_mo": "Shiki-powered syntax highlighting with editable\n                      mode",
  "jsontreeview": "JsonTreeView:",
  "collapsible_json_viewer_with_syntax_coloring": "Collapsible JSON viewer with syntax coloring",
  "toast_system": "Toast System:",
  "stack_up_to_5_toasts_with_6_animation_variants": "Stack up to 5 toasts with 6 animation variants",
  "smart_slider": "Smart Slider:",
  "inside_outside_labels_shapes_custom_text_mapping": "Inside/outside labels, shapes, custom text\n                      mapping",
  "frameworks_resources": "Frameworks & Resources",
  "external_libraries_and_tools_powering_this_ui_libr": "External libraries and tools powering this UI library",
  "framework": "Framework",
  "category": "Category",
  "description": "Description",
  "react": "React",
  "ui_library_for_building_component_based_interfaces": "UI library for building component-based interfaces",
  "radix_ui": "Radix UI",
  "components": "Components",
  "unstyled_accessible_component_primitives": "Unstyled, accessible component primitives",
  "tailwind_css": "Tailwind CSS",
  "styling": "Styling",
  "utility_first_css_framework_v4": "Utility-first CSS framework (v4)",
  "shadcn_ui": "shadcn/ui",
  "component_patterns_and_design_system": "Component patterns and design system",
  "react_hook_form": "React Hook Form",
  "forms": "Forms",
  "performant_form_validation_with_zod_integration": "Performant form validation with Zod integration",
  "d3_js": "D3.js",
  "visualization": "Visualization",
  "data_driven_document_manipulation_and_svg_graphics": "Data-driven document manipulation and SVG graphics",
  "vite": "Vite",
  "build_tool": "Build Tool",
  "fast_development_server_and_optimized_builds": "Fast development server and optimized builds",
  "storybook": "Storybook",
  "development": "Development",
  "component_development_and_documentation": "Component development and documentation",
  "typescript": "TypeScript",
  "language": "Language",
  "type_safe_javascript_with_enhanced_tooling": "Type-safe JavaScript with enhanced tooling",
  "lucide_icons": "Lucide Icons",
  "icons": "Icons",
  "open_source_icon_set_with_react_components": "Open-source icon set with React components",
  "shiki": "Shiki",
  "syntax_highlighting": "Syntax Highlighting",
  "vs_code_quality_syntax_highlighting_using_textmate": "VS Code-quality syntax highlighting using TextMate grammars",
  "zod": "Zod",
  "validation": "Validation",
  "typescript_first_schema_validation_with_static_typ": "TypeScript-first schema validation with static type inference",
  "storybook_design_token": "Storybook Design Token",
  "documentation": "Documentation",
  "auto_generates_design_token_documentation_from_css": "Auto-generates design token documentation from CSS annotations",
  "elkjs": "ELKjs",
  "graph_layout": "Graph Layout",
  "hierarchical_graph_layout_engine_from_eclipse_layo": "Hierarchical graph layout engine from Eclipse Layout Kernel",
  "dagre": "Dagre",
  "directed_graph_layout_library_for_network_visualiz": "Directed graph layout library for network visualizations",
  "class_variance_authority_for_type_safe_component_v": "Class Variance Authority for type-safe component variants",
  "tailwind_merge": "Tailwind Merge",
  "utilities": "Utilities",
  "intelligently_merges_tailwind_css_classes_without_": "Intelligently merges Tailwind CSS classes without conflicts",
  "foreman": "Foreman",
  "process_manager_for_running_multiple_dev_services_": "Process manager for running multiple dev services (Procfile.dev)",
  "tanstack_table": "TanStack Table",
  "headless_ui_for_building_powerful_tables_datagrids": "Headless UI for building powerful tables & datagrids",
  "js_yaml": "js-yaml",
  "parsing": "Parsing",
  "yaml_parser_for_mermaid_diagram_files_and_configur": "YAML parser for Mermaid diagram files and configuration",
  "husky": "Husky",
  "git_hooks": "Git Hooks",
  "modern_git_hooks_for_enforcing_code_quality_on_com": "Modern Git hooks for enforcing code quality on commits",
  "commitlint": "Commitlint",
  "lint_commit_messages_to_follow_conventional_commit": "Lint commit messages to follow conventional commit format",
  "standard_version": "Standard Version",
  "versioning": "Versioning",
  "automated_semantic_versioning_and_changelog_genera": "Automated semantic versioning and CHANGELOG generation",
  "eslint": "ESLint",
  "code_quality": "Code Quality",
  "pluggable_linting_utility_for_javascript_and_types": "Pluggable linting utility for JavaScript and TypeScript",
  "prettier": "Prettier",
  "opinionated_code_formatter_for_consistent_style": "Opinionated code formatter for consistent style"
}
