/**
 * Type definitions for RBMK Reactor Simulation
 *
 * This file defines the core types for simulating a simplified RBMK reactor
 * with uranium fuel atoms, control rods, and neutron particles.
 *
 * Based on real RBMK-1000 specifications (Chernobyl Unit 4 type).
 */

/**
 * Position in 2D space
 */
export interface Position {
  x: number;
  y: number;
}

/**
 * Velocity vector in 2D space
 */
export interface Velocity {
  vx: number;
  vy: number;
}

/**
 * Uranium fuel channel in the reactor core
 *
 * RBMK-1000 has 1,693 fuel channels arranged in a square lattice.
 * Each channel contains enriched uranium dioxide (UO2) fuel.
 */
export interface Atom {
  id: string;
  position: Position;
  /** Grid coordinates for layout */
  gridX: number;
  gridY: number;
  /** Current energy level / reaction intensity (0-1) */
  energy: number;
  /** Time since last neutron emission (ms) */
  timeSinceEmission: number;
  /** Visual radius in pixels */
  radius: number;
  /** Neutrons emitted from this atom */
  emittedCount: number;
  /** Fuel integrity (0-1, where 0 = molten/destroyed, 1 = intact) */
  integrity: number;
  /** Last temperature value for meltdown tracking (0-1 scale) */
  lastTemperature: number;
}

/**
 * Control rod that absorbs neutrons
 *
 * RBMK reactors use boron carbide (B4C) control rods.
 * Real RBMK-1000 specs:
 * - 211 control rods total (manual + emergency protection)
 * - Insertion time: 18-21 seconds (critically slow!)
 * - B-10 absorption cross-section: 3,840 barns
 * - Active zone height: 7 meters
 */
export interface ControlRod {
  id: string;
  /** X position (fixed) */
  x: number;
  /** Y position (variable - controlled by slider, 0 = top/raised, height = bottom/lowered) */
  y: number;
  /** Width of the rod */
  width: number;
  /** Height of the rod when fully inserted */
  maxHeight: number;
  /** Current insertion depth (0-1, where 0 = fully raised, 1 = fully lowered) */
  insertion: number;
  /** Number of neutrons absorbed (for statistics) */
  absorbedCount: number;
  /** Visual state for absorption animation */
  isAbsorbing: boolean;
  lastAbsorptionTime: number;
  /** Target insertion (for smooth animation to user-set value) */
  targetInsertion: number;
  /** Rod health/integrity (0-1, where 0 = destroyed, 1 = perfect condition) */
  health: number;
  /** Last absorbedCount value (for tracking absorption damage increments) */
  lastAbsorbedCount?: number;
}

/**
 * Free neutron particle
 *
 * Real physics:
 * - Thermal neutrons: ~2200 m/s velocity
 * - Fast neutrons: ~20,000 km/s velocity (pre-moderation)
 * - Average lifetime in reactor: ~0.1 seconds
 * - U-235 fission releases 2.43 neutrons on average
 */
export interface Neutron {
  id: string;
  position: Position;
  velocity: Velocity;
  /** Age of the neutron in milliseconds */
  age: number;
  /** Speed in pixels per frame */
  speed: number;
  /** Visual radius */
  radius: number;
  /** Whether neutron was just created (for trail effects) */
  isNew: boolean;
  /** Previous positions for trail rendering */
  trail: Position[];
  /** Number of times neutron has bounced off containment walls (for absorption) */
  wallBounces: number;
  /** ID of parent atom that emitted this neutron (prevents immediate re-absorption) */
  parentAtomId?: string;
}

/**
 * Heat grid for temperature visualization
 *
 * Represents a 2D grid of temperature values for visualizing reactor heat.
 * Heat is generated by fission reactions and diffuses to surrounding areas.
 *
 * OPTIMIZATION: Uses double-buffering to eliminate expensive array copies.
 * During diffusion, reads from active buffer and writes to inactive buffer,
 * then swaps buffers. This eliminates 54,000 allocations/sec at 60 FPS.
 */
export interface HeatGrid {
  /** Width of grid in cells */
  width: number;
  /** Height of grid in cells */
  height: number;
  /** Cell size in pixels */
  cellSize: number;
  /** 2D array of temperature values (0-1, where 0 = cold, 1 = max heat) */
  temperatures: number[][];
  /** Back buffer for double-buffered diffusion (eliminates array copy) */
  backBuffer: number[][];
  /** Which buffer is currently active (0 = temperatures, 1 = backBuffer) */
  activeBuffer: 0 | 1;
}

/**
 * Water coolant grid for RBMK reactor
 *
 * Represents water coolant density in the reactor channels.
 * RBMK reactors use water as a neutron absorber (NOT moderator - graphite moderates).
 * When water boils → steam voids form → less neutron absorption → MORE reactivity (positive void coefficient).
 *
 * This is the critical design flaw that caused the Chernobyl disaster.
 */
export interface WaterGrid {
  /** Width of grid in cells */
  width: number;
  /** Height of grid in cells */
  height: number;
  /** Cell size in pixels */
  cellSize: number;
  /** 2D array of water density values (0-1, where 0 = all steam, 1 = all liquid water) */
  waterDensity: number[][];
}

/**
 * Simulation state
 */
export interface SimulationState {
  atoms: Atom[];
  controlRods: ControlRod[];
  neutrons: Neutron[];
  /** Heat grid for temperature visualization */
  heatGrid: HeatGrid;
  /** Water coolant grid (for positive void coefficient simulation) */
  waterGrid: WaterGrid;
  /** Whether simulation is running */
  isRunning: boolean;
  /** Simulation speed multiplier */
  speed: number;
  /** Total neutrons emitted */
  totalEmitted: number;
  /** Total neutrons absorbed by rods */
  totalAbsorbed: number;
  /** Total neutrons absorbed by atoms (fission events) */
  totalFissions: number;
  /** Total neutrons absorbed by water */
  totalWaterAbsorbed: number;
  /** Total neutrons leaked through containment boundary */
  totalLeaked: number;
  /** Current reaction rate (neutrons per second) */
  reactionRate: number;
  /** Average reactor temperature (0-1) */
  reactorTemp: number;
  /** Average void fraction (0-1, where 0 = all water, 1 = all steam) */
  voidFraction: number;
  /**
   * Reactor pressure (0-1 normalized scale)
   * Real RBMK: 70 bar (1000 psi) normal, 90+ bar critical
   * 0.0 = vacuum
   * 0.7 = normal operation (70 bar)
   * 1.0 = critical pressure (100 bar, rupture imminent)
   */
  reactorPressure: number;
  /** Timestamp of last frame */
  lastFrameTime: number;
  /** Animation frame ID (for RAF cancellation) */
  animationFrameId: number | null;
}

/**
 * Configuration for reactor simulation
 *
 * Based on real RBMK-1000 reactor physics, scaled for visualization.
 *
 * Real RBMK-1000 properties:
 * - 1,693 pressure tubes (fuel channels) in 11.8m x 11.8m core
 * - 211 control rods (manual control + emergency protection system)
 * - Core active zone: 7m high
 * - Thermal neutron velocity: ~2200 m/s
 * - Control rod insertion time: 18-21 seconds (slow!)
 * - Boron-10 absorption cross-section: 3,840 barns
 * - U-235 fission cross-section: 580 barns (thermal neutrons)
 * - Average neutrons per U-235 fission: 2.43
 */
export interface ReactorConfig {
  /** Reactor grid dimensions (scaled down from 1,693 channels) */
  grid: {
    /** Number of fuel channels horizontally */
    columns: number;
    /** Number of fuel channels vertically */
    rows: number;
    /** Spacing between fuel channels (pixels) */
    spacing: number;
  };

  /** Fuel channel properties (U-235 enriched fuel) */
  atom: {
    /** Visual radius (pixels) */
    radius: number;
    /** Base emission rate (neutrons per second per atom) */
    baseEmissionRate: number;
    /** Energy decay rate per frame (cooling) */
    energyDecay: number;
    /** Energy gain when struck by neutron (chain reaction) */
    energyGain: number;
    /** Minimum energy to emit neutron */
    emissionThreshold: number;
    /** Neutrons released per fission event (real: 2.43) */
    neutronsPerFission: number;
  };

  /** Control rod properties (Boron-10 Carbide) */
  controlRod: {
    /** Width of rod (pixels) */
    width: number;
    /** Number of control rods (real: 211, scaled down for viz) */
    count: number;
    /** Neutron absorption probability (based on 3,840 barn cross-section) */
    absorptionProbability: number;
    /** Animation duration for absorption effect (ms) */
    absorptionEffectDuration: number;
    /** Insertion/withdrawal speed (real: 18-21 seconds for full insertion) */
    insertionSpeed: number; // units per second (0-1 range over this time)
  };

  /** Neutron properties */
  neutron: {
    /** Visual radius (pixels) */
    radius: number;
    /** Base speed (pixels per frame at 60fps, scaled from 2200 m/s) */
    baseSpeed: number;
    /** Speed variation (+/- this fraction) */
    speedVariation: number;
    /** Maximum age before decay (ms, real: ~100ms) */
    maxAge: number;
    /** Maximum number of neutrons in simulation (performance limit) */
    maxCount: number;
    /** Probability of causing fission vs being absorbed (related to 580 barn cross-section) */
    fissionProbability: number;
    /** Trail length for visual effect */
    trailLength: number;
    /** Maximum wall bounces before neutron leaks through containment */
    maxWallBounces: number;
  };

  /** Physics constants */
  physics: {
    /** Collision detection threshold (pixels) */
    collisionThreshold: number;
    /** Boundary bounce damping (0-1) */
    boundaryDamping: number;
    /** Enable collision with other neutrons */
    neutronCollisions: boolean;
  };

  /** Simulation parameters */
  simulation: {
    /** Default speed multiplier */
    defaultSpeed: number;
    /** Target frames per second */
    targetFPS: number;
    /** Enable requestAnimationFrame (vs setInterval) */
    useRAF: boolean;
  };

  /** Water coolant properties (RBMK positive void coefficient) */
  water: {
    /**
     * Boiling point temperature threshold (0-1 scale)
     * Above this temperature, water starts converting to steam
     */
    boilingPoint: number;
    /**
     * Positive void coefficient (β units)
     * Real RBMK values:
     * - Pre-Chernobyl: +4.5 β (dangerously high)
     * - Post-Chernobyl safety improvements: +0.7 β
     * - Western PWR reactors: negative coefficient (safe design)
     *
     * Higher values = more dangerous thermal runaway feedback
     */
    voidCoefficient: number;
    /**
     * Rate at which water converts to steam above boiling point
     * (fraction per frame, 0-1)
     */
    evaporationRate: number;
    /**
     * Rate at which steam condenses back to water below boiling point
     * (fraction per frame, 0-1)
     */
    condensationRate: number;
    /**
     * Base neutron absorption probability for water (without voids)
     * Water acts as neutron absorber in RBMK (graphite is the moderator)
     */
    absorptionProbability: number;
    /**
     * Base cooling rate per frame (fraction, 0-1)
     * Scales with water density - less water = less cooling
     */
    baseCoolingRate: number;
  };

  /** Reactor pressure parameters */
  pressure: {
    /**
     * Base pressure when reactor is cold (0-1 scale)
     * Real: ~1 bar (atmospheric) when cold
     * Normalized: 0.01 (1% of operating pressure)
     */
    basePressure: number;
    /**
     * Normal operating pressure (0-1 scale)
     * Real RBMK: 65-70 bar (945-1015 psi)
     * Normalized: 0.7 (70% of max scale)
     */
    normalOperatingPressure: number;
    /**
     * Critical pressure threshold (0-1 scale)
     * Real: 90+ bar = rupture risk
     * Normalized: 1.0 (100% of scale = 100 bar)
     */
    criticalPressure: number;
    /**
     * Temperature contribution to pressure
     * Higher = temperature affects pressure more
     * Based on ideal gas law: P ∝ T
     */
    temperatureCoefficient: number;
    /**
     * Void fraction (steam) contribution to pressure
     * Steam increases pressure faster than liquid water
     * Real: Steam has much higher specific volume
     */
    voidCoefficient: number;
  };

  /** Damage and safety limits */
  damage: {
    /** Control rod damage parameters */
    rod: {
      /** Heat damage rate per frame (when T > threshold) */
      heatDamageRate: number;
      /** Damage per neutron absorbed */
      absorptionDamageRate: number;
      /** Temperature threshold for heat damage (0-1) */
      heatDamageThreshold: number;
    };
    /** Fuel damage/meltdown parameters */
    fuel: {
      /** Meltdown temperature (0-1 scale, ~1,200°C) */
      meltdownTemp: number;
      /** Integrity loss rate when T > meltdown */
      meltdownRate: number;
      /** Decay heat from damaged fuel (fraction) */
      decayHeatFraction: number;
    };
  };

  /** Regeneration systems (simulates maintenance/refueling/coolant circulation) */
  regeneration: {
    /** Water regeneration (coolant circulation) */
    water: {
      /** Base regeneration rate per frame (fraction, 0-1) */
      baseRate: number;
      /** Scale regeneration by temperature (less at high temps due to steam) */
      temperatureScaling: boolean;
    };
    /** Fuel integrity regeneration */
    fuel: {
      /** Healing rate per frame when cool (fraction, 0-1) */
      healingRate: number;
      /** Maximum temperature for healing (fraction of meltdown temp, 0-1) */
      healingThreshold: number;
    };
    /** Control rod health regeneration */
    rod: {
      /** Healing rate per frame when cool (fraction, 0-1) */
      healingRate: number;
      /** Maximum temperature for healing (0-1 scale) */
      healingThreshold: number;
    };
  };
}

/**
 * Collision detection result
 */
export interface CollisionResult {
  /** Type of collision */
  type: "atom" | "rod" | "boundary" | "neutron" | "none";
  /** Object ID that was hit (if applicable) */
  objectId?: string;
  /** New velocity after collision (if applicable) */
  newVelocity?: Velocity;
}
